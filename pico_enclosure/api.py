"""Web API Interface."""
import sys
import json


class API:
    """An async API service."""

    def __init__(self):
        self._routes = {}
        self._doc = ""
        self.route("/docs")(self.docs)

    def route(self, route: str):
        """Decorator to manage the attaching functions to routes.

        Args:
            route: The API route to which the decorated function is attached

        """

        def _wrap_func(func):
            self._routes[route] = func
            self._doc += f'<h2><a href="{route}">{route}</h2>\n<hr>\n'
            return func

        return _wrap_func

    async def route_requests(self, reader, writer):
        """Route incoming requests.

        Args:
            reader:
            writer:

        """

        request = str(await reader.readline())
        while await reader.readline() != b"\r\n":  # Ignore headers
            pass

        # method, path, protocol
        _, request_path, _ = request.split(
            " "
        )  # Break apart "GET \this\path?arg=1 HTTP/1.1"
        parts = request_path.split("?")
        route = parts[0]

        if len(parts) == 2:
            params = dict(v.split("=") for v in parts[1].split("&"))
        else:
            params = None

        try:
            result = await self._routes[route](**params or {})
            response_code = "200 OK"
        except KeyError:
            result = "<h1>404 - Page Not Found</h1>\n\n" + self._doc
            response_code = "404 PAGE NOT FOUND"
        except Exception as e:
            result = "<h1>500 - An Internal error has occurred.</h1>"
            response_code = "500 INTERNAL SERVER ERROR"
            sys.print_exception(e)  # pyright: ignore [reportGeneralTypeIssues]
        finally:
            if isinstance(
                result,  # pyright: ignore [reportUnboundVariable]
                (dict, list),
            ):
                body = json.dumps(result)
                content_type = "application/json"
            else:
                body = f"""<!DOCTYPE html>
                <html>
                    <head><title>Pico Print - {route}</title></head>
                    <body>
                        %s
                    </body>
                </html>
                """ % str(
                    result  # pyright: ignore [reportUnboundVariable]
                )
                content_type = "text/html"

            writer.write(
                "HTTP/1.0 %s\r\nContent-type: %s\r\n\r\n"
                % (
                    response_code,  # pyright: ignore [reportUnboundVariable]
                    content_type,
                )
            )
            writer.write(body)
            await writer.drain()
            await writer.wait_closed()

    async def docs(self):
        """Autogenerated documentation for available endpoints."""
        return self._doc


api = API()
